Changes (31 Jul 2018):
 - Fix .NET version support
 - Add Skip Computer Account Feature
 - Add VC++ Runtime installer to setup

Changes (14 Jul 2018):
 - Add version information to DLL and Driver EXE.
 - Add icon to Configurator.
 - Add .NET backwards compatibility to Configurator.
 - Add x64 MSI setup project for easy deployment.
 - Fix for configurator window size.
 - Change branding text to match project site.
 - Update readme.txt.
 - Add passwd.bat example to project setup MSI.
 - Update passwdhk-config to .NET 4.7.1
 - Add require administrator (UAC) access for Configurator to start.
 - Thanks to Brian Clayton helping this project.


Changes (25 Sep 2017):

 - Added Visual Studio 2017 Solution/Project files, updated passwdhk-config to .NET 4.6.1

 - Made file names more consistent and organized scattered directory structure

 - Updated default registry settings to working example

 - Renamed make_installer.bat to make-installer-32.bat to indicate it is only for 32-bit builds since it requires NSIS which is still 32-bit only

Changes (03 Apr 2008):

 - Fixed bug causing truncation of passwords containing more than 13 URL-encoded characters. Buffer size was being calculated based on password length *before* URL encoding (which lengthens it for symbols requiring encoding).  The extra buffer padding allowed room for up to 13 characters to be encoded, but more than this caused truncation of the password as it was passed to the external program(s).

 - Updated memory wiping to use SecureZeroMemory for better security. ZeroMemory and memset may be optimized out by the compiler, but SecureZeroMemory will not be. With Visual C++ 6.0, this will require updated headers and libraries. Fortunately, these can be downloaded free from Microsoft (see http://www.microsoft.com/downloads/details.aspx?FamilyId=E6E1C3DF-A74F-4207-8586-711EBE331CDC&displaylang=en to download the current SDK).

 - Updated everything for full UNICODE support.

 - Fixed bug with logging truncation not working when output2log enabled.  The duplicate handles used for external program output logging were not being closed before truncation was attempted.

 - Made logging capability thread-safe.  Microsoft specifies that password filter functions should be thread-safe; see http://msdn2.microsoft.com/en-us/library/ms721884.aspx .  Existing logging garbled data when log writes (including redirected external program output) overlapped between multiple threads.

 - Added support for user-specified account info and multi-threaded testing to passwdhk-driver test application.